test compile precise-output
target x86_64

function %f1(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = sdiv v0, v1
  return v2
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   cbw %al, %al
;   movq    %rax, %r11
;   idiv    %al, (none), %sil, %al, (none)
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f2(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = sdiv v0, v1
  return v2
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   cwd %ax, %dx
;   movq    %rdx, %rcx
;   idiv    %ax, %dx, %si, %ax, %dx
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f3(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = sdiv v0, v1
  return v2
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   cdq %eax, %edx
;   movq    %rdx, %rcx
;   idiv    %eax, %edx, %esi, %eax, %edx
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f4(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = sdiv v0, v1
  return v2
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   cqo %rax, %rdx
;   movq    %rdx, %rcx
;   idiv    %rax, %rdx, %rsi, %rax, %rdx
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

