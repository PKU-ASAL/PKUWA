test compile precise-output
target x86_64

function %f1(f32) -> i32 {
block0(v0: f32):
  v1 = bitcast.i32 v0
  return v1
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movd    %xmm0, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f2(i32) -> f32 {
block0(v0: i32):
  v1 = bitcast.f32 v0
  return v1
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movd    %edi, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f3(f64) -> i64 {
block0(v0: f64):
  v1 = bitcast.i64 v0
  return v1
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %xmm0, %rax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f4(i64) -> f64 {
block0(v0: i64):
  v1 = bitcast.f64 v0
  return v1
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

