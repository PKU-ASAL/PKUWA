test compile precise-output
target s390x

function %icmp_eq_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 eq v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   vceqgs %v5, %v0, %v1
;   lhi %r2, 0
;   lochie %r2, 1
;   br %r14

function %icmp_ne_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 ne v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   vceqgs %v5, %v0, %v1
;   lhi %r2, 0
;   lochine %r2, 1
;   br %r14

function %icmp_slt_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 slt v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   vecg %v0, %v1 ; jne 10 ; vchlgs %v5, %v1, %v0
;   lhi %r2, 0
;   lochil %r2, 1
;   br %r14

function %icmp_sgt_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 sgt v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   vecg %v1, %v0 ; jne 10 ; vchlgs %v5, %v0, %v1
;   lhi %r2, 0
;   lochil %r2, 1
;   br %r14

function %icmp_sle_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 sle v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   vecg %v1, %v0 ; jne 10 ; vchlgs %v5, %v0, %v1
;   lhi %r2, 0
;   lochinl %r2, 1
;   br %r14

function %icmp_sge_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 sge v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   vecg %v0, %v1 ; jne 10 ; vchlgs %v5, %v1, %v0
;   lhi %r2, 0
;   lochinl %r2, 1
;   br %r14

function %icmp_ult_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 ult v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   veclg %v0, %v1 ; jne 10 ; vchlgs %v5, %v1, %v0
;   lhi %r2, 0
;   lochil %r2, 1
;   br %r14

function %icmp_ugt_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 ugt v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   veclg %v1, %v0 ; jne 10 ; vchlgs %v5, %v0, %v1
;   lhi %r2, 0
;   lochil %r2, 1
;   br %r14

function %icmp_ule_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 ule v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   veclg %v1, %v0 ; jne 10 ; vchlgs %v5, %v0, %v1
;   lhi %r2, 0
;   lochinl %r2, 1
;   br %r14

function %icmp_uge_i128(i128, i128) -> b1 {
block0(v0: i128, v1: i128):
  v2 = icmp.i128 uge v0, v1
  return v2
}

; block0:
;   vl %v0, 0(%r2)
;   vl %v1, 0(%r3)
;   veclg %v0, %v1 ; jne 10 ; vchlgs %v5, %v1, %v0
;   lhi %r2, 0
;   lochinl %r2, 1
;   br %r14

