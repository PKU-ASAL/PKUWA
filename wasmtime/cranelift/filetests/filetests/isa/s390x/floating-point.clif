test compile precise-output
target s390x

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; F32CONST/F64CONST
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; FIXME: should use FZERO instruction
; FIXME: should use out-of-line literal pool

function %f32const_zero() -> f32 {
block0:
  v1 = f32const 0x0.0
  return v1
}

; block0:
;   bras %r1, 8 ; data.f32 0 ; le %f0, 0(%r1)
;   br %r14

function %f64const_zero() -> f64 {
block0:
  v1 = f64const 0x0.0
  return v1
}

; block0:
;   bras %r1, 12 ; data.f64 0 ; ld %f0, 0(%r1)
;   br %r14

function %f32const_one() -> f32 {
block0:
  v1 = f32const 0x1.0
  return v1
}

; block0:
;   bras %r1, 8 ; data.f32 1 ; le %f0, 0(%r1)
;   br %r14

function %f64const_one() -> f64 {
block0:
  v1 = f64const 0x1.0
  return v1
}

; block0:
;   bras %r1, 12 ; data.f64 1 ; ld %f0, 0(%r1)
;   br %r14

function %fadd_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fadd v0, v1
  return v2
}

; block0:
;   aebr %f0, %f2
;   br %r14

function %fadd_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fadd v0, v1
  return v2
}

; block0:
;   adbr %f0, %f2
;   br %r14

function %fsub_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fsub v0, v1
  return v2
}

; block0:
;   sebr %f0, %f2
;   br %r14

function %fsub_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fsub v0, v1
  return v2
}

; block0:
;   sdbr %f0, %f2
;   br %r14

function %fmul_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fmul v0, v1
  return v2
}

; block0:
;   meebr %f0, %f2
;   br %r14

function %fmul_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fmul v0, v1
  return v2
}

; block0:
;   mdbr %f0, %f2
;   br %r14

function %fdiv_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fdiv v0, v1
  return v2
}

; block0:
;   debr %f0, %f2
;   br %r14

function %fdiv_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fdiv v0, v1
  return v2
}

; block0:
;   ddbr %f0, %f2
;   br %r14

function %fmin_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fmin v0, v1
  return v2
}

; block0:
;   wfminsb %f0, %f0, %f2, 1
;   br %r14

function %fmin_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fmin v0, v1
  return v2
}

; block0:
;   wfmindb %f0, %f0, %f2, 1
;   br %r14

function %fmax_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fmax v0, v1
  return v2
}

; block0:
;   wfmaxsb %f0, %f0, %f2, 1
;   br %r14

function %fmax_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fmax v0, v1
  return v2
}

; block0:
;   wfmaxdb %f0, %f0, %f2, 1
;   br %r14

function %fmin_pseudo_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fmin_pseudo v0, v1
  return v2
}

; block0:
;   wfminsb %f0, %f0, %f2, 3
;   br %r14

function %fmin_pseudo_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fmin_pseudo v0, v1
  return v2
}

; block0:
;   wfmindb %f0, %f0, %f2, 3
;   br %r14

function %fmax_pseudo_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fmax_pseudo v0, v1
  return v2
}

; block0:
;   wfmaxsb %f0, %f0, %f2, 3
;   br %r14

function %fmax_pseudo_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fmax_pseudo v0, v1
  return v2
}

; block0:
;   wfmaxdb %f0, %f0, %f2, 3
;   br %r14

function %sqrt_f32(f32) -> f32 {
block0(v0: f32):
  v1 = sqrt v0
  return v1
}

; block0:
;   sqebr %f0, %f0
;   br %r14

function %sqrt_f64(f64) -> f64 {
block0(v0: f64):
  v1 = sqrt v0
  return v1
}

; block0:
;   sqdbr %f0, %f0
;   br %r14

function %fabs_f32(f32) -> f32 {
block0(v0: f32):
  v1 = fabs v0
  return v1
}

; block0:
;   lpebr %f0, %f0
;   br %r14

function %fabs_f64(f64) -> f64 {
block0(v0: f64):
  v1 = fabs v0
  return v1
}

; block0:
;   lpdbr %f0, %f0
;   br %r14

function %fneg_f32(f32) -> f32 {
block0(v0: f32):
  v1 = fneg v0
  return v1
}

; block0:
;   lcebr %f0, %f0
;   br %r14

function %fneg_f64(f64) -> f64 {
block0(v0: f64):
  v1 = fneg v0
  return v1
}

; block0:
;   lcdbr %f0, %f0
;   br %r14

function %fpromote_f32(f32) -> f64 {
block0(v0: f32):
  v1 = fpromote.f64 v0
  return v1
}

; block0:
;   ldebr %f0, %f0
;   br %r14

function %fdemote_f64(f64) -> f32 {
block0(v0: f64):
  v1 = fdemote.f32 v0
  return v1
}

; block0:
;   ledbra %f0, %f0, 0
;   br %r14

function %ceil_f32(f32) -> f32 {
block0(v0: f32):
  v1 = ceil v0
  return v1
}

; block0:
;   fiebr %f0, %f0, 6
;   br %r14

function %ceil_f64(f64) -> f64 {
block0(v0: f64):
  v1 = ceil v0
  return v1
}

; block0:
;   fidbr %f0, %f0, 6
;   br %r14

function %floor_f32(f32) -> f32 {
block0(v0: f32):
  v1 = floor v0
  return v1
}

; block0:
;   fiebr %f0, %f0, 7
;   br %r14

function %floor_f64(f64) -> f64 {
block0(v0: f64):
  v1 = floor v0
  return v1
}

; block0:
;   fidbr %f0, %f0, 7
;   br %r14

function %trunc_f32(f32) -> f32 {
block0(v0: f32):
  v1 = trunc v0
  return v1
}

; block0:
;   fiebr %f0, %f0, 5
;   br %r14

function %trunc_f64(f64) -> f64 {
block0(v0: f64):
  v1 = trunc v0
  return v1
}

; block0:
;   fidbr %f0, %f0, 5
;   br %r14

function %nearest_f32(f32) -> f32 {
block0(v0: f32):
  v1 = nearest v0
  return v1
}

; block0:
;   fiebr %f0, %f0, 4
;   br %r14

function %nearest_f64(f64) -> f64 {
block0(v0: f64):
  v1 = nearest v0
  return v1
}

; block0:
;   fidbr %f0, %f0, 4
;   br %r14

function %fma_f32(f32, f32, f32) -> f32 {
block0(v0: f32, v1: f32, v2: f32):
  v3 = fma v0, v1, v2
  return v3
}

; block0:
;   wfmasb %f0, %f0, %f2, %f4
;   br %r14

function %fma_f64(f64, f64, f64) -> f64 {
block0(v0: f64, v1: f64, v2: f64):
  v3 = fma v0, v1, v2
  return v3
}

; block0:
;   wfmadb %f0, %f0, %f2, %f4
;   br %r14

function %fcopysign_f32(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fcopysign v0, v1
  return v2
}

; block0:
;   bras %r1, 8 ; data.f32 NaN ; le %f4, 0(%r1)
;   vsel %v0, %v0, %v2, %v4
;   br %r14

function %fcopysign_f64(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fcopysign v0, v1
  return v2
}

; block0:
;   bras %r1, 12 ; data.f64 NaN ; ld %f4, 0(%r1)
;   vsel %v0, %v0, %v2, %v4
;   br %r14

function %fcvt_to_uint_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_uint.i8 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 256 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -1 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wclgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_sint_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_sint.i8 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 128 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -129 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wcgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_uint_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_uint.i16 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 65536 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -1 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wclgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_sint_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_sint.i16 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 32768 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -32769 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wcgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_uint_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_uint.i32 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 4294967300 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -1 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wclgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_sint_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_sint.i32 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 2147483600 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -2147484000 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wcgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_uint_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_uint.i64 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 18446744000000000000 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -1 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wclgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_sint_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_sint.i64 v0
  return v1
}

; block0:
;   cebr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 8 ; data.f32 9223372000000000000 ; le %f5, 0(%r1)
;   cebr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 8 ; data.f32 -9223373000000000000 ; vlef %v17, 0(%r1), 0
;   wfcsb %f0, %v17
;   jnle 6 ; trap
;   wldeb %v21, %f0
;   wcgdb %v23, %v21, 0, 5
;   vlgvg %r2, %v23, 0
;   br %r14

function %fcvt_to_uint_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_uint.i8 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 256 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -1 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wclgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_sint_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_sint.i8 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 128 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -129 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wcgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_uint_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_uint.i16 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 65536 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -1 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wclgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_sint_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_sint.i16 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 32768 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -32769 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wcgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_uint_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_uint.i32 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 4294967296 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -1 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wclgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_sint_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_sint.i32 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 2147483648 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -2147483649 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wcgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_uint_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_uint.i64 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 18446744073709552000 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -1 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wclgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_to_sint_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_sint.i64 v0
  return v1
}

; block0:
;   cdbr %f0, %f0
;   jno 6 ; trap
;   bras %r1, 12 ; data.f64 9223372036854776000 ; ld %f5, 0(%r1)
;   cdbr %f0, %f5
;   jnhe 6 ; trap
;   bras %r1, 12 ; data.f64 -9223372036854778000 ; vleg %v17, 0(%r1), 0
;   wfcdb %f0, %v17
;   jnle 6 ; trap
;   wcgdb %v21, %f0, 0, 5
;   vlgvg %r2, %v21, 0
;   br %r14

function %fcvt_from_uint_i8_f32(i8) -> f32 {
block0(v0: i8):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; block0:
;   llgcr %r5, %r2
;   ldgr %f5, %r5
;   wcdlgb %f7, %f5, 0, 3
;   ledbra %f0, %f7, 4
;   br %r14

function %fcvt_from_sint_i8_f32(i8) -> f32 {
block0(v0: i8):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; block0:
;   lgbr %r5, %r2
;   ldgr %f5, %r5
;   wcdgb %f7, %f5, 0, 3
;   ledbra %f0, %f7, 4
;   br %r14

function %fcvt_from_uint_i16_f32(i16) -> f32 {
block0(v0: i16):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; block0:
;   llghr %r5, %r2
;   ldgr %f5, %r5
;   wcdlgb %f7, %f5, 0, 3
;   ledbra %f0, %f7, 4
;   br %r14

function %fcvt_from_sint_i16_f32(i16) -> f32 {
block0(v0: i16):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; block0:
;   lghr %r5, %r2
;   ldgr %f5, %r5
;   wcdgb %f7, %f5, 0, 3
;   ledbra %f0, %f7, 4
;   br %r14

function %fcvt_from_uint_i32_f32(i32) -> f32 {
block0(v0: i32):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; block0:
;   llgfr %r5, %r2
;   ldgr %f5, %r5
;   wcdlgb %f7, %f5, 0, 3
;   ledbra %f0, %f7, 4
;   br %r14

function %fcvt_from_sint_i32_f32(i32) -> f32 {
block0(v0: i32):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; block0:
;   lgfr %r5, %r2
;   ldgr %f5, %r5
;   wcdgb %f7, %f5, 0, 3
;   ledbra %f0, %f7, 4
;   br %r14

function %fcvt_from_uint_i64_f32(i64) -> f32 {
block0(v0: i64):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; block0:
;   ldgr %f3, %r2
;   wcdlgb %f5, %f3, 0, 3
;   ledbra %f0, %f5, 4
;   br %r14

function %fcvt_from_sint_i64_f32(i64) -> f32 {
block0(v0: i64):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; block0:
;   ldgr %f3, %r2
;   wcdgb %f5, %f3, 0, 3
;   ledbra %f0, %f5, 4
;   br %r14

function %fcvt_from_uint_i8_f64(i8) -> f64 {
block0(v0: i8):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; block0:
;   llgcr %r5, %r2
;   ldgr %f5, %r5
;   wcdlgb %f0, %f5, 0, 4
;   br %r14

function %fcvt_from_sint_i8_f64(i8) -> f64 {
block0(v0: i8):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; block0:
;   lgbr %r5, %r2
;   ldgr %f5, %r5
;   wcdgb %f0, %f5, 0, 4
;   br %r14

function %fcvt_from_uint_i16_f64(i16) -> f64 {
block0(v0: i16):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; block0:
;   llghr %r5, %r2
;   ldgr %f5, %r5
;   wcdlgb %f0, %f5, 0, 4
;   br %r14

function %fcvt_from_sint_i16_f64(i16) -> f64 {
block0(v0: i16):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; block0:
;   lghr %r5, %r2
;   ldgr %f5, %r5
;   wcdgb %f0, %f5, 0, 4
;   br %r14

function %fcvt_from_uint_i32_f64(i32) -> f64 {
block0(v0: i32):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; block0:
;   llgfr %r5, %r2
;   ldgr %f5, %r5
;   wcdlgb %f0, %f5, 0, 4
;   br %r14

function %fcvt_from_sint_i32_f64(i32) -> f64 {
block0(v0: i32):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; block0:
;   lgfr %r5, %r2
;   ldgr %f5, %r5
;   wcdgb %f0, %f5, 0, 4
;   br %r14

function %fcvt_from_uint_i64_f64(i64) -> f64 {
block0(v0: i64):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; block0:
;   ldgr %f3, %r2
;   wcdlgb %f0, %f3, 0, 4
;   br %r14

function %fcvt_from_sint_i64_f64(i64) -> f64 {
block0(v0: i64):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; block0:
;   ldgr %f3, %r2
;   wcdgb %f0, %f3, 0, 4
;   br %r14

function %fcvt_to_uint_sat_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i8 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wclgdb %f5, %f3, 0, 5
;   lgdr %r5, %f5
;   lgr %r2, %r5
;   clgfi %r5, 256
;   locghih %r2, 255
;   br %r14

function %fcvt_to_sint_sat_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i8 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wcgdb %f5, %f3, 0, 5
;   lgdr %r5, %f5
;   cebr %f0, %f0
;   locghio %r5, 0
;   lgr %r4, %r5
;   cghi %r5, 127
;   locghih %r4, 127
;   lgr %r2, %r4
;   cghi %r4, -128
;   locghil %r2, -128
;   br %r14

function %fcvt_to_uint_sat_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i16 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wclgdb %f5, %f3, 0, 5
;   lgdr %r5, %f5
;   lgr %r2, %r5
;   clgfi %r5, 65535
;   locghih %r2, -1
;   br %r14

function %fcvt_to_sint_sat_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i16 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wcgdb %f5, %f3, 0, 5
;   lgdr %r5, %f5
;   cebr %f0, %f0
;   locghio %r5, 0
;   lgr %r4, %r5
;   cghi %r5, 32767
;   locghih %r4, 32767
;   lgr %r2, %r4
;   cghi %r4, -32768
;   locghil %r2, -32768
;   br %r14

function %fcvt_to_uint_sat_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i32 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wclgdb %f5, %f3, 0, 5
;   lgdr %r2, %f5
;   llilf %r3, 4294967295
;   clgr %r2, %r3
;   locgrh %r2, %r3
;   br %r14

function %fcvt_to_sint_sat_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i32 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wcgdb %f5, %f3, 0, 5
;   lgdr %r2, %f5
;   cebr %f0, %f0
;   locghio %r2, 0
;   lgfi %r3, 2147483647
;   cgr %r2, %r3
;   locgrh %r2, %r3
;   lgfi %r5, -2147483648
;   cgr %r2, %r5
;   locgrl %r2, %r5
;   br %r14

function %fcvt_to_uint_sat_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i64 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wclgdb %f5, %f3, 0, 5
;   lgdr %r2, %f5
;   br %r14

function %fcvt_to_sint_sat_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i64 v0
  return v1
}

; block0:
;   ldebr %f3, %f0
;   wcgdb %f5, %f3, 0, 5
;   lgdr %r2, %f5
;   cebr %f0, %f0
;   locghio %r2, 0
;   br %r14

function %fcvt_to_uint_sat_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i8 v0
  return v1
}

; block0:
;   wclgdb %f3, %f0, 0, 5
;   lgdr %r3, %f3
;   lgr %r2, %r3
;   clgfi %r3, 256
;   locghih %r2, 255
;   br %r14

function %fcvt_to_sint_sat_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i8 v0
  return v1
}

; block0:
;   wcgdb %f3, %f0, 0, 5
;   lgdr %r3, %f3
;   cdbr %f0, %f0
;   locghio %r3, 0
;   lgr %r4, %r3
;   cghi %r3, 127
;   locghih %r4, 127
;   lgr %r2, %r4
;   cghi %r4, -128
;   locghil %r2, -128
;   br %r14

function %fcvt_to_uint_sat_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i16 v0
  return v1
}

; block0:
;   wclgdb %f3, %f0, 0, 5
;   lgdr %r3, %f3
;   lgr %r2, %r3
;   clgfi %r3, 65535
;   locghih %r2, -1
;   br %r14

function %fcvt_to_sint_sat_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i16 v0
  return v1
}

; block0:
;   wcgdb %f3, %f0, 0, 5
;   lgdr %r3, %f3
;   cdbr %f0, %f0
;   locghio %r3, 0
;   lgr %r4, %r3
;   cghi %r3, 32767
;   locghih %r4, 32767
;   lgr %r2, %r4
;   cghi %r4, -32768
;   locghil %r2, -32768
;   br %r14

function %fcvt_to_uint_sat_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i32 v0
  return v1
}

; block0:
;   wclgdb %f3, %f0, 0, 5
;   lgdr %r2, %f3
;   llilf %r5, 4294967295
;   clgr %r2, %r5
;   locgrh %r2, %r5
;   br %r14

function %fcvt_to_sint_sat_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i32 v0
  return v1
}

; block0:
;   wcgdb %f3, %f0, 0, 5
;   lgdr %r2, %f3
;   cdbr %f0, %f0
;   locghio %r2, 0
;   lgfi %r5, 2147483647
;   cgr %r2, %r5
;   locgrh %r2, %r5
;   lgfi %r3, -2147483648
;   cgr %r2, %r3
;   locgrl %r2, %r3
;   br %r14

function %fcvt_to_uint_sat_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i64 v0
  return v1
}

; block0:
;   wclgdb %f3, %f0, 0, 5
;   lgdr %r2, %f3
;   br %r14

function %fcvt_to_sint_sat_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i64 v0
  return v1
}

; block0:
;   wcgdb %f3, %f0, 0, 5
;   lgdr %r2, %f3
;   cdbr %f0, %f0
;   locghio %r2, 0
;   br %r14

function %bitcast_i64_f64(i64) -> f64 {
block0(v0: i64):
  v1 = bitcast.f64 v0
  return v1
}

; block0:
;   ldgr %f0, %r2
;   br %r14

function %bitcast_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = bitcast.i64 v0
  return v1
}

; block0:
;   lgdr %r2, %f0
;   br %r14

function %bitcast_i32_f32(i32) -> f32 {
block0(v0: i32):
  v1 = bitcast.f32 v0
  return v1
}

; block0:
;   vlvgf %v0, %r2, 0
;   br %r14

function %bitcast_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = bitcast.i32 v0
  return v1
}

; block0:
;   vlgvf %r2, %v0, 0
;   br %r14

