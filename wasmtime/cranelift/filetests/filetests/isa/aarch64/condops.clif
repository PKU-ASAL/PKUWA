test compile precise-output
set unwind_info=false
target aarch64

function %f(i8, i64, i64) -> i64 {
block0(v0: i8, v1: i64, v2: i64):
  v3 = iconst.i8 42
  v4 = ifcmp v0, v3
  v5 = selectif.i64 eq v4, v1, v2
  return v5
}

; block0:
;   uxtb w6, w0
;   subs wzr, w6, #42
;   csel x0, x1, x2, eq
;   ret

function %g(i8) -> b1 {
block0(v0: i8):
  v3 = iconst.i8 42
  v4 = ifcmp v0, v3
  v5 = trueif eq v4
  return v5
}

; block0:
;   uxtb w4, w0
;   subs wzr, w4, #42
;   cset x0, eq
;   ret

function %h(i8, i8, i8) -> i8 {
block0(v0: i8, v1: i8, v2: i8):
  v3 = bitselect.i8 v0, v1, v2
  return v3
}

; block0:
;   and w5, w1, w0
;   bic w7, w2, w0
;   orr w0, w5, w7
;   ret

function %i(b1, i8, i8) -> i8 {
block0(v0: b1, v1: i8, v2: i8):
  v3 = select.i8 v0, v1, v2
  return v3
}

; block0:
;   and w6, w0, #1
;   subs wzr, w6, wzr
;   csel x0, x1, x2, ne
;   ret

function %i(i32, i8, i8) -> i8 {
block0(v0: i32, v1: i8, v2: i8):
  v3 = iconst.i32 42
  v4 = icmp.i32 eq v0, v3
  v5 = select.i8 v4, v1, v2
  return v5
}

; block0:
;   subs wzr, w0, #42
;   csel x0, x1, x2, eq
;   ret

function %i128_select(b1, i128, i128) -> i128 {
block0(v0: b1, v1: i128, v2: i128):
  v3 = select.i128 v0, v1, v2
  return v3
}

; block0:
;   and w10, w0, #1
;   subs wzr, w10, wzr
;   csel x0, x2, x4, ne
;   csel x1, x3, x5, ne
;   ret

